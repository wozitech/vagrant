# proxy nginx tasks
---

- name: postgres group
  become: true
  group:
    name: "{{ item.groupname }}"
    gid: "{{ item.gid }}"
    state: present
  with_items:
    - { groupname: postgres, gid: 200 }

- name: Default users
  become: true
  user:
    name: "{{ item.username }}"
    shell: /bin/bash
    uid: "{{ item.uid }}"
    group: "{{ item.default_group }}"
    groups: "{{ item.groups }}"
    create_home: yes
    append: no
    generate_ssh_key: yes
    state: present
  with_items:
    - { username: postgres, uid: 200, default_group: postgres, groups: '' }

- name: Ensure base directory for postgres database
  become: true
  file:
    path: /var/lib/pgsql
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ensure directory for postgres database files exist
  become: true
  file:
    path: /var/lib/pgsql/data
    state: directory
    mode: 0750
    owner: postgres
    group: postgres

- name: create the postgres container
  become: true
  docker_container:
    name: "{{ DB_CONTAINER_NAME }}"
    image: postgres
    state: started
    detach: yes
    # user: postgres
    # groups:
    #   postgres
    # volumes:
    #   - "/var/lib/pgsql/data:/var/lib/postgresql/data"
    ports:
      - "{{ node11_ip }}:5432:5432/tcp"
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres

# - name: Enable nginx inbound on public zone (non-ssl)
#   become: true
#   firewalld:
#     state: enabled
#     zone: public
#     port: "{{ NON_SSL_PORT }}/tcp"
#     permanent: yes
#   register: nginx_non_ssl_firewalld

# - name: Enable nginx inbound on public zone (ssl)
#   become: true
#   firewalld:
#     state: enabled
#     zone: public
#     port: "{{ SSL_PORT }}/tcp"
#     permanent: yes
#   register: nginx_ssl_firewalld

# - name: Restart firewall for changes to take effect
#   become: true
#   systemd:
#     name: firewalld
#     state: restarted
#   when: nginx_non_ssl_firewalld.changed or nginx_ssl_firewalld.changed

# # https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/managing_containers/using_systemd_with_containers
# - name: Install nginx service
#   become: true
#   template:
#       src: ../templates/nginx.docker.service.j2
#       dest: /usr/lib/systemd/system/nginx.service
#       owner: root
#       group: root
#       mode: 0644
#   vars:
#     nginx_srv:
#       name: "{{  NGINX_CONTAINER_NAME }}"
#   register: nginx_service_install

# - name: Enable and start nginx docker service
#   become: true
#   systemd:
#     name: "{{ NGINX_CONTAINER_NAME }}"
#     state: started
#     enabled: true
#     daemon_reload: yes
#   when: nginx_service_install.changed

# - name: Restart nginx docker service
#   become: true
#   systemd:
#     name: "{{ NGINX_CONTAINER_NAME }}"
#     state: restarted
#   when:
#     - wiki_reverse_proxy.changed
#     - not nginx_service_install.changed