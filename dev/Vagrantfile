# -*- mode: ruby -*-
# vi: set ft=ruby :

# wit home Dev virtual (KVM) servers:
# 1. node-10; a dockerised server including a minimum of two node V10.x containers and a postgresDB container

Vagrant.configure("2") do |config|
   
  config.vm.box = "centos/7"
  config.vm.synced_folder "./", "/vagrant", type: "nfs"

  config.vm.provider :libvirt do |libvirt,override|
    libvirt.host = "192.168.1.12"
    libvirt.connect_via_ssh = true
    libvirt.username = "aylingw"
    #libvirt.password - leave blank, because using SSH to login with private key
    #libvirt.id_ssh_key_file - leave blank which assumes the default ${HOME}/.ssh/id_rsa
    libvirt.cpus = 1
    libvirt.memory = 1024
    libvirt.autostart = true
    #libvirt.mgmt_attach = false
  end

  config.vm.define :postgres do |postgres|
    postgres.vm.hostname = "postgres.dev.wozitech.local"
    postgres.vm.network :private_network,
      libvirt__network_name: "devapp"

    postgres.vm.provider :libvirt do |domain|
      domain.memory = 8192
      domain.cpus = 2
      # Specific storage for the database
      #domain.storage :file, :size => "10G", :type => "qcow2"
    end

    postgres.vm.provision "ansible" do |ansible|
       ansible.playbook = "ansible/hosts/postgres/postgres.yml"
       ansible.compatibility_mode = "2.0"
       ansible.raw_arguments = Shellwords.shellsplit(ENV['ANSIBLE_ARGS']) if ENV['ANSIBLE_ARGS']
    end

    postgres.vm.post_up_message = "The node V10 server is up and running"
  end

  config.vm.define "k8s-master" do |master|
    master.vm.hostname = "k8s-master.dev.wozitech.local"
    master.vm.network "private_network", libvirt__network_name: "devapp"

    master.vm.provider :libvirt do |domain|
      domain.memory = 4096
      domain.cpus = 2
      # Specific storage for the master
      domain.storage :file, :size => "10G", :type => "qcow2"
    end

    master.vm.provision "ansible" do |ansible|
      ansible.playbook = "ansible/hosts/k8s/master.yml"
      ansible.compatibility_mode = "2.0"
      ansible.raw_arguments = Shellwords.shellsplit(ENV['ANSIBLE_ARGS']) if ENV['ANSIBLE_ARGS']
      ansible.extra_vars = {
          unused_node_ip: "192.168.50.10",
      }
    end
    master.vm.post_up_message = "The k8s master is up and running"
  end

  (1..2).each do |i|
    config.vm.define "k8s-worker#{i}" do |worker|
      worker.vm.hostname = "k8s-worker#{i}.dev.wozitech.local"
      worker.vm.network "private_network", libvirt__network_name: "devapp"

      worker.vm.provider :libvirt do |domain|
        domain.memory = 4096
        domain.cpus = 2
        # Specific storage for the worker containers
        domain.storage :file, :size => "30G", :type => "qcow2"
      end

      worker.vm.provision "ansible" do |ansible|
        ansible.playbook = "ansible/hosts/k8s/worker#{i}.yml"
        ansible.compatibility_mode = "2.0"
        ansible.raw_arguments = Shellwords.shellsplit(ENV['ANSIBLE_ARGS']) if ENV['ANSIBLE_ARGS']
      end
      worker.vm.post_up_message = "The k8s wortker{i} is up and running"
    end
  end
end

