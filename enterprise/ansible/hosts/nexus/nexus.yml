---
- hosts: all
  vars_files:
    - ../../../../common/ansible/vars/centosVars.yml
    - ../../vars.yml

  vars:
    lvm_mount: /var/nexus
    lvm_disks: /dev/vdb      # comma separated
    nexus_version: ''
    nexus_timezone: 'Europe/London'
    nexus_download_url: "http://download.sonatype.com/nexus/3"
    nexus_download_dir: /tmp
    nexus_default_port: 8081
    nexus_default_context_path: /
    nexus_os_group: nexus
    nexus_os_user: nexus
    nexus_installation_dir: /opt
    nexus_data_dir: "{{ lvm_mount }}"
    nexus_tmp_dir: /tmp/nexus
    nexus_min_heap_size: "1200M"
    nexus_max_heap_size: "{{ nexus_min_heap_size }}"
    nexus_max_direct_memory: "2G"
    nexus_admin_password: 'changeme'
    nexus_anonymous_access: true
    public_hostname: "{{ nexus_fqdn }}"
    nexus_branding_header: "WOZiTech Nexus3"
    nexus_branding_footer: "Last provisionned {{ ansible_date_time.iso8601 }}"
    nexus_audit_enabled: false
    # httpd_setup_enable: false
    # httpd_ssl_certificate_file: 'files/nexus.vm.crt'
    # httpd_ssl_certificate_key_file: 'files/nexus.vm.key'
    nexus_privileges:
      - name: all-repos-read # used as key to update a privilege
        description: 'Read & Browse access to all repos'
        repository: '*'
        actions: # can be add, browse, create, delete, edit, read or  * (all)
          - read
          - browse
    nexus_roles:
      - id: Developers1 # can map to a LDAP group id, also used as a key to update a role
        name: developers
        description: All local developers
        privileges:
          - nx-search-read
          - all-repos-read
        roles: [] # references to other role names
    nexus_local_users:
      - username: aylingw # used as key to update
        first_name: Warren
        last_name: Ayling
        email: warren.ayling@wozitech-ltd.co.uk
        password: "change_me"
        roles:
          - Developers # role ID
    nexus_blobstores: []
    # example blobstore item :
    # - name: separate-storage
    #   type: file
    #   path: /mnt/custom/path
    # - name: s3-blobstore
    #   type: S3
    #   config:
    #     bucket: s3-blobstore
    #     accessKeyId: "{{ VAULT_ENCRYPTED_KEY_ID }}"
    #     secretAccessKey: "{{ VAULT_ENCRYPTED_ACCESS_KEY }}"
    nexus_repos_maven_group:
      - name: public
        member_repos:
          - central
          - jboss
    nexus_repos_maven_hosted:
      - name: private-release
        version_policy: release
        write_policy: allow_once  # one of "allow", "allow_once" or "deny"
    nexus_config_pypi: false
    nexus_config_docker: true
    nexus_config_raw: false
    nexus_config_rubygems: false
    nexus_config_bower: false
    nexus_config_npm: true
    nexus_config_gitlfs: false
    nexus_config_yum: true
    nexus_nuget_api_key_realm: false
    nexus_npm_bearer_token_realm: false
    nexus_docker_bearer_token_realm: false  # required for docker anonymous access
    nexus_scheduled_tasks: []
    #  #  Example task to compact blobstore :
    #  - name: compact-docker-blobstore
    #    cron: '0 0 22 * * ?'
    #    typeId: blobstore.compact
    #    task_alert_email: alerts@example.org  # optional
    #    taskProperties:
    #      blobstoreName: {{ nexus_blob_names.docker.blob }} # all task attributes are stored as strings by nexus internally
    #  #  Example task to purge maven snapshots
    #  - name: Purge-maven-snapshots
    #    cron: '0 50 23 * * ?'
    #    typeId: repository.maven.remove-snapshots
    #    task_alert_email: alerts@example.org  # optional
    #    taskProperties:
    #      repositoryName: "*"  # * for all repos. Change to a repository name if you only want a specific one
    #      minimumRetained: "2"
    #      snapshotRetentionDays: "2"
    #      gracePeriodInDays: "2"
    #    booleanTaskProperties:
    #      removeIfReleased: true
    #  #  Example task to purge unused docker manifest and images
    #  - name: Purge unused docker manifests and images
    #    cron: '0 55 23 * * ?'
    #    typeId: "repository.docker.gc"
    #    task_alert_email: alerts@example.org  # optional
    #    taskProperties:
    #      repositoryName: "*"  # * for all repos. Change to a repository name if you only want a specific one
    #  #  Example task to purge incomplete docker uploads
    #  - name: Purge incomplete docker uploads
    #    cron: '0 0 0 * * ?'
    #    typeId: "repository.docker.upload-purge"
    #    task_alert_email: alerts@example.org  # optional
    #    taskProperties:
    #      age: "24"
    nexus_backup_configure: false
    nexus_backup_cron: '0 0 21 * * ?'  # See cron expressions definition in nexus create task gui
    nexus_backup_dir: '/var/nexus-backup'
    nexus_restore_log: '{{ nexus_backup_dir }}/nexus-restore.log'
    nexus_backup_rotate: false
    nexus_backup_rotate_first: false
    nexus_backup_keep_rotations: 4  # Keep 4 backup rotation by default (current + last 3)

  pre_tasks:
    - import_tasks: tasks/network.yml
    - import_tasks: tasks/mounts.yml
    - import_tasks: ../../../../common/ansible/tasks/centosTasks.yml

  roles:
    - ptrunk.firewalld
    # - ansible-thoteam.nexus3-oss

  tasks: []

  post_tasks: []

