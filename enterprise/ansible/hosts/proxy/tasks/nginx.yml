# proxy nginx tasks
---

- name: Ensure directory for local SSL certs exists
  become: true
  file:
    path: "{{ SSL_CERTS_DIR }}"
    state: directory
    mode: 0750
    owner: root
    group: root

- name: Ensure directory for local html exists
  become: true
  file:
    path: "{{ HTML_DIR }}"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ensure directory for local vhosts exists
  become: true
  file:
    path: "{{ VHOSTS_DIR }}"
    state: directory
    mode: 0750
    owner: root
    group: root

- name: Copy HTML placeholders
  become: true
  copy: src="../files/html/{{ item }}"  dest="{{ HTML_DIR }}"  mode=0644
  with_items:
    - index.html
    - 50x.html
  changed_when: false

- name: Copy default proxy conf
  become: true
  copy: src="../files/conf/defaults.conf"  dest="{{ NGINX_PROXY_DEFAULTS_CONF_FILE }}"  mode=0644
  changed_when: false

- name: Copy wiki proxy conf
  become: true
  copy: src="../files/conf/wiki-reverse.conf"  dest="{{ NGINX_PROXY_WIKI_CONF_FILE }}"  mode=0644
  changed_when: false

- name: Generate default self signed SSL certificates
  become: true
  command: >
    openssl req
      -new
      -newkey rsa:4096
      -days 3650
      -nodes
      -x509
      -subj "/C=US/ST=NY/L=NY/O=NA/CN={{ DEFAULT_DOMAIN_NAME }}"
      -keyout "{{ SSL_CERTS_DIR }}/default.key"
      -out "{{ SSL_CERTS_DIR }}/default.crt"
  args:
    creates: "{{ SSL_CERTS_DIR }}/default.crt"

- name: create the nginx container
  become: true
  docker_container:
    name: "{{ NGINX_CONTAINER_NAME }}"
    image: jwilder/nginx-proxy:latest
    state: started
    detach: yes
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "{{ SSL_CERTS_DIR }}:/etc/nginx/certs"
      - "{{ VHOSTS_DIR }}:/etc/nginx/vhost.d"
      - "{{ HTML_DIR }}:/usr/share/nginx/html"
      - "{{ NGINX_PROXY_DEFAULTS_CONF_FILE }}:/etc/nginx/conf.d/wozitech_defaults.conf:ro"
    ports:
      - "{{ forward_proxy_ip }}:{{ NON_SSL_PORT }}:{{ NON_SSL_PORT }}/tcp"
      - "{{ forward_proxy_ip }}:{{ SSL_PORT }}:{{ SSL_PORT }}/tcp"
    labels: { com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy : "true" }
    env:
      VIRTUAL_HOST: "{{ VIRTUAL_HOST_WIKI }}"

- name: Enable nginx inbound on public zone (non-ssl)
  become: true
  firewalld:
    state: enabled
    zone: public
    port: "{{ NON_SSL_PORT }}/tcp"
    permanent: yes
  register: nginx_non_ssl_firewalld

- name: Enable nginx inbound on public zone (ssl)
  become: true
  firewalld:
    state: enabled
    zone: public
    port: "{{ SSL_PORT }}/tcp"
    permanent: yes
  register: nginx_ssl_firewalld

- name: Restart firewall for changes to take effect
  become: true
  systemd:
    name: firewalld
    state: restarted
  when: nginx_non_ssl_firewalld.changed or nginx_ssl_firewalld.changed

# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/managing_containers/using_systemd_with_containers
- name: Install nginx service
  become: true
  template:
      src: ../templates/nginx.docker.service.j2
      dest: /usr/lib/systemd/system/nginx.service
      owner: root
      group: root
      mode: 0644
  vars:
    nginx_srv:
      name: "{{  NGINX_CONTAINER_NAME }}"
  register: nginx_service_install

- name: Enable and start nginx docker service
  become: true
  systemd:
    name: "{{ NGINX_CONTAINER_NAME }}"
    state: started
    enabled: true
    daemon_reload: yes
  when: nginx_service_install.changed