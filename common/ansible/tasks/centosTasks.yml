# common tasks
---
- name: update the local repo
  become: true
  yum:
    name: "*"
    state: latest
    #exclude: git*
  when:
    - ansible_pkg_mgr == "yum"
    - os_update is defined
    - os_update == 1

# - name: Install default packages
#   become: true
#   yum:
#     name: "{{ item.name }}"
#     state: "{{ item.state }}"
#   with_items:
#     - "{{ default_os_packages }}"
#   when:
#     - ansible_pkg_mgr == "yum"

- name: Default groups
  become: true
  group:
    name: "{{ item.groupname }}"
    gid: "{{ item.gid }}"
    state: present
  with_items:
    - "{{ default_groups }}"

- name: Default users
  become: true
  user:
    name: "{{ item.username }}"
    shell: /bin/bash
    uid: "{{ item.uid }}"
    group: "{{ item.default_group }}"
    groups: "{{ item.groups }}"
    create_home: yes
    append: no
    generate_ssh_key: yes
    state: present
  with_items:
    - "{{ default_users }}"

# could add wit-admin to sudo's, but it's just as easy to use existing wheel; but we want to use NOPASSWD
- name: sudoers "wit-admin" group - NOPASSWD
  become: true
  copy:
    content: "%wit-admin ALL=(ALL) NOPASSWD: ALL\n"
    dest: /etc/sudoers.d/wit-admin
    owner: root
    group: root
    mode: 0600
    validate: "/usr/sbin/visudo -cf %s"

- name: firewalld zone network eth0 interface
  become: true
  lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-eth0 regexp="^ZONE" line="ZONE=trusted"
  register: eth0_zoned
- name: firewalld zone network eth1 interface
  become: true
  lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-eth1 regexp="^ZONE" line="ZONE=public"
  register: eth1_zoned
- name: Restart networking
  become: true
  service: name=network state=restarted
  when: eth0_zoned.changed or eth1_zoned.changed

- name: Enable firewalld
  become: true
  systemd:
    name: firewalld
    state: started
    enabled: true
  when: DISABLE_HOST_FIREWALL is undefined or not DISABLE_HOST_FIREWALL

- name: Enable SSH and DHCP client only on trusted zone
  become: true
  firewalld:
    state: enabled
    zone: trusted
    service: "{{ item }}"
  with_items:
    - ssh
    - dhcpv6-client
  register: trusted_updated
  when: DISABLE_HOST_FIREWALL is undefined or not DISABLE_HOST_FIREWALL

- name: Disable SSH/DHCP from on public zone
  become: true
  firewalld:
    state: disabled
    zone: public
    service: "{{ item }}"
    permanent: yes
  with_items:
    - ssh
    - dhcpv6-client
  register: public_updated
  when: DISABLE_HOST_FIREWALL is undefined or not DISABLE_HOST_FIREWALL

- name: Restart firewall for changes to take effect
  become: true
  systemd:
    name: firewalld
    state: restarted
  when: trusted_updated.changed or public_updated.changed
